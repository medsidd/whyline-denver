{{ config(materialized='table', meta={"allow_in_app": true}) }}

with stops as (
    select
        stop_id,
        geom
    from {{ ref('stg_gtfs_stops') }}
),
tracts as (
    select
        geoid,
        geom
    from {{ ref('stg_denver_tracts') }}
),
acs as (
    select
        regexp_replace(geoid, '^14000US', '') as geoid,
        pop_total,
        pct_hh_no_vehicle,
        pct_transit_commute,
        pct_poverty
    from {{ ref('stg_acs_geo') }}
    where pop_total > 0
),
near as (
    select
        s.stop_id,
        t.geoid
    from stops as s
    join tracts as t
        -- 804.672 meters is approximately 0.5 miles, a standard walkable catchment distance in transit equity analysis.
        -- This distance is used to associate each stop with nearby census tracts for vulnerability analysis, reflecting typical access/walkshed studies.
        on st_dwithin(s.geom, t.geom, 804.672)
),
w as (
    select
        n.stop_id,
        a.geoid,
        a.pop_total,
        a.pct_hh_no_vehicle,
        a.pct_transit_commute,
        a.pct_poverty
    from near as n
    join acs as a
        using (geoid)
),
norm as (
    select
        stop_id,
        sum(pop_total) as pop_sum,
        sum(pct_hh_no_vehicle * pop_total) / nullif(sum(pop_total), 0) as pct_hh_no_vehicle_w,
        sum(pct_transit_commute * pop_total) / nullif(sum(pop_total), 0) as pct_transit_commute_w,
        sum(pct_poverty * pop_total) / nullif(sum(pop_total), 0) as pct_poverty_w
    from w
    group by
        stop_id
),
score as (
    select
        *,
        (pct_hh_no_vehicle_w + pct_transit_commute_w + pct_poverty_w) / 3.0 as vuln_raw
    from norm
),
joined as (
    select
        s.stop_id,
        n.pct_hh_no_vehicle_w,
        n.pct_transit_commute_w,
        n.pct_poverty_w,
        n.vuln_raw
    from stops as s
    left join score as n
        using (stop_id)
)

select
    stop_id,
    pct_hh_no_vehicle_w,
    pct_transit_commute_w,
    pct_poverty_w,
    cast(
        round(
            case
                when max(vuln_raw) over () = min(vuln_raw) over () then 100
                else (
                    (vuln_raw - min(vuln_raw) over ()) /
                    nullif(
                        max(vuln_raw) over () - min(vuln_raw) over (),
                        0
                    ) * 100
                )
            end,
            1
        ) as float64
    ) as vuln_score_0_100,
    current_timestamp() as build_run_at
from joined
